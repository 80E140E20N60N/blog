(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{450:function(s,a,n){"use strict";n.r(a);var e=n(23),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"小程序基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小程序基础"}},[s._v("#")]),s._v(" 小程序基础")]),s._v(" "),n("h2",{attrs:{id:"appid"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#appid"}},[s._v("#")]),s._v(" AppID")]),s._v(" "),n("p",[s._v("每个小程序的开发者对应有一个自己的appid\n新建一个小程序后，在该小程序内添加对应人的开发者权限，扫码登录微信后台，可以查看该小程序自己的appid")]),s._v(" "),n("h2",{attrs:{id:"appsecret"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#appsecret"}},[s._v("#")]),s._v(" AppSecret")]),s._v(" "),n("p",[s._v("小程序密钥重置会怎么样?")]),s._v(" "),n("p",[s._v("密钥投入使用就不要重置了，会影响上线的项目，重置之后，其他这个账号开发的小程序都得替换下密钥，否则会影响原来的业务，比如获取用户信息。")]),s._v(" "),n("h2",{attrs:{id:"微信小程序setstoragesync和setstorage的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#微信小程序setstoragesync和setstorage的区别"}},[s._v("#")]),s._v(" 微信小程序setStorageSync和setStorage的区别")]),s._v(" "),n("p",[s._v("相同点："),n("br"),s._v("\n微信小程序 wx.setstoragesync和wx.setstorage都是能把值保存在微信小程序缓存中，类似于浏览器的localstorage概念。它们都是将数据存储在本地缓存指定的key中，单个key最大数据长度为 1MB，所有数据存储上限为 10MB")]),s._v(" "),n("p",[s._v("不同点："),n("br"),s._v("\nwx.setStorage是异步的：就是这个在执行中不会影响其他代码的执行。即异步就是不管保没保存成功,程序都会继续往下执行，使用异步,性能会更好；")]),s._v(" "),n("p",[s._v("wx.setStorageSync是同步的：要等待这个代码执行完才会去执行其他的代码。即同步是等保存成功了,才会执行下面的代码，使用同步,数据会更安全。")]),s._v(" "),n("p",[s._v("总结：\n以Sync（同步，同时）结尾的都是都是同步缓存，二者的区别是，异步不会阻塞当前任务，同步缓存直到同步方法处理完才能继续往下执行。")]),s._v(" "),n("h2",{attrs:{id:"小程序代码构成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小程序代码构成"}},[s._v("#")]),s._v(" 小程序代码构成")]),s._v(" "),n("ol",[n("li",[s._v(".json 后缀的 JSON 配置文件")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("JSON文件都是被包裹在一个大括号中 {}，通过key-value的方式来表达数据。JSON的Key必须包裹在一个双引号中，在实践中，编写 JSON 的时候，忘了给 Key 值加双引号或者是把双引号写成单引号是常见错误。\n\n还需要注意的是 JSON 文件中无法使用注释，试图添加注释将会引发报错。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v(".wxml 后缀的 WXML 模板文件")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("WXML和 HTML 非常相似，但是也有很多不一样的地方。例如标签名字、自有的模板语法\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ol",{attrs:{start:"3"}},[n("li",[s._v(".wxss 后缀的 WXSS 样式文件")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("WXSS 具有 CSS 大部分的特性，小程序在 WXSS 也做了一些扩充和修改。\n\n1、新增了尺寸单位rpx\n\nrpx（responsive pixel）: 响应单位\n1. rpx是微信小程序独有的、解决屏幕自适应的尺寸单位\n2. 可以根据屏幕宽度进行自适应，不论大小屏幕，规定屏幕宽为750rpx\n3. 通过 rpx 设置元素和字体的大小，小程序在不同尺寸的屏幕下，可以实现自动适配\n\nrpx 和 px之间的换算\n在普通网页开发中，最常用的像素单位是px\n\n以 iPhone6 为例，iPhone6 的屏幕宽度为 375px，共有 750个物理像素，则 750rpx = 375px = 750 物理像素\n得出公式：1 rpx = 0.5 px = 1 物理像素\n举个例子：在iPhone6上，如果要绘制一个宽为100px，高为30px的盒子，换算成rpx单位，宽高分别为200rpx 和 60rpx\n\n官方建议：开发微信小程序时，设计师可以以iPhone6 作为视觉稿的标准，如果要根据iPhone6的设计稿，绘制小程序的页面，可以直接把单位 px 替换成 rpx 。例如：假设iPhone6设计稿上，要绘制一个宽高为 200px 的盒子，换算为 rpx为200rpx\n\n以iPhone6为设计稿标准，单位 px 直接替换成 rpx的原因\n设计师在出设计稿的时候，出的都是二倍图，也就是说如果在这个设计稿上有一个宽高为200px的盒子，那么它最终画到页面上实际上是一个宽高为100px的盒子，那么再换算成rpx需要乘以2，就又变成了200rpx，跟设计稿上的数字是一样的，所以我们可以保持数字不变，直接将单位 px 替换成 rpx\n\n\n\n2、提供了全局的样式和局部样式。\n和前边 app.json, page.json 的概念相同，可以写一个 app.wxss 作为全局样式，会作用于当前小程序的所有页面，局部页面样式 page.wxss 仅对当前页面生效。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("ol",{attrs:{start:"4"}},[n("li",[s._v(".js 后缀的 JS 脚本逻辑文件")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("一般js文件的大体内容包含在Page内，Page是一个页面构造器，这个构造器就生成了一个页面。在生成页面的时候，小程序框架会把 data 数据和 index.wxml 一起渲染出最终的结构，于是就得到了你看到的小程序的样子。\n\n在渲染完界面之后，页面实例就会收到一个 onLoad 的回调，你可以在这个回调处理你的逻辑。\n\n注：如果是自定义组件，则该组件的js文件由Component()构造\n\n注：小程序提供的丰富的 API，利用这些 API 可以很方便的调起微信提供的能力，例如获取用户信息、本地存储、微信支付等\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"项目结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#项目结构"}},[s._v("#")]),s._v(" 项目结构")]),s._v(" "),n("p",[n("strong",[n("code",[s._v("common.js")]),s._v(" 项目的全局变量")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("custom-tab-bar")]),s._v(" 小程序底部tab-bar(信息、主页、我的)")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("images")]),s._v(" 用来存本地图片")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("libs")]),s._v(" 用来存放第三方js文件，比如地图")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("pacKageA")]),s._v("分包")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("pages")]),s._v(" 用来存放所有小程序的页面")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("components")]),s._v("封装的子组件")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("index")]),s._v("小程序主页")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("views")]),s._v("小程序各页面")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("utils")]),s._v(" 用来存放工具性质的模块")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("app.js")]),s._v(" 小程序项目的入口文件")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("app.json")]),s._v(" 小程序项目的全局配置文件，包含程序的所有页面路径（pages字段）、窗口外观（window字段）、界面表现、底部 tab、引入的vant组件")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("app.wxss")]),s._v(" 小程序项目的全局样式文件")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("config.js")]),s._v(" 小程序项目配置，例如baseUrl")])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("project.config.json")]),s._v(" 对小程序开发工具所做的个性化配置，例如：appid记录小程序账号，"),n("code",[s._v("setting")]),s._v(" 中保存了"),n("code",[s._v("编译相关的配置")])])]),s._v(" "),n("p",[n("strong",[n("code",[s._v("sitemap.json")]),s._v(" 用来配置小程序以及页面是否允许被微信搜索到")])])])}),[],!1,null,null,null);a.default=t.exports}}]);